"""add catalog tables

Revision ID: 78b232872b85
Revises: 0c6844e732b3
Create Date: 2025-07-13 17:50:56.319951

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '78b232872b85'
down_revision: Union[str, Sequence[str], None] = '0c6844e732b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('customer', 'dealer_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('customer', 'email',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               nullable=True)
    #op.drop_constraint(op.f('customer_email_key'), 'customer', type_='unique')
    op.drop_constraint(op.f('customer_dealer_id_fkey'), 'customer', type_='foreignkey')
    op.create_foreign_key(None, 'customer', 'app_user', ['dealer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('customer', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('customer', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customer', type_='foreignkey')
    op.create_foreign_key(op.f('customer_dealer_id_fkey'), 'customer', 'app_user', ['dealer_id'], ['id'], ondelete='SET NULL')
    #op.create_unique_constraint(op.f('customer_email_key'), 'customer', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('customer', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('customer', 'dealer_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###
